AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: AWS Simple Authorization
Parameters:
  ProjectName: 
    Type: String
    Description: Project Name (use alpha-numeric and '-' only)
  SiteName:
    Type: String
    Description: Name of the site
  SupportEmailDomain: 
    Type: String
    Description: Support email that verification code is from
  # TODO: encrypt before sending
  SecretToken:
    Type: String
    NoEcho: true
    Description: The secret key used for signing jwt
Globals:
  Function:
    Runtime: nodejs8.10
    Timeout: 30
Resources:
  UserTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub '${ProjectName}-Users'
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      KeySchema: 
        - 
          AttributeName: "email"
          KeyType: "HASH"
      AttributeDefinitions: 
        - 
          AttributeName: "email"
          AttributeType: "S"
        - 
          AttributeName: "verify"
          AttributeType: "S"
      GlobalSecondaryIndexes: 
        - 
          IndexName: "VerifyIndex"
          KeySchema: 
            - 
              AttributeName: "verify"
              KeyType: "HASH"
          Projection: 
            NonKeyAttributes: 
              - "account_status"
            ProjectionType: "INCLUDE"
          ProvisionedThroughput: 
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1
      Tags:
        - 
          Key: "Project"
          Value: !Ref ProjectName
  LoginLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: LoginLambda
      Handler: index.handler
      CodeUri: dist/login
      MemorySize: 128 
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref UserTable
      Environment:
        Variables:
          JWT_SECRET: !Ref SecretToken
          DbTableName: !Ref UserTable
      Events:
        MyEndpoint:
          Type: Api
          Properties:
            Path: /login
            Method: post
      Tags:
        Project: !Ref ProjectName
  RefreshLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: RefreshLambda
      Handler: index.handler
      CodeUri: dist/refresh
      MemorySize: 128 
      Environment:
        Variables:
          JWT_SECRET: !Ref SecretToken
      Events:
        MyEndpoint:
          Type: Api
          Properties:
            Path: /refresh
            Method: post
      Tags:
        Project: !Ref ProjectName
  RegisterLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: RegisterLambda
      Handler: index.handler
      CodeUri: dist/register
      MemorySize: 128 
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UserTable
        - LambdaInvokePolicy:
            FunctionName: !Ref VerifySendEmailLambda
      Environment:
        Variables:
          DbTableName: !Ref UserTable
          VerifySendEmailLambda: !Ref VerifySendEmailLambda
      Events:
        MyEndpoint:
          Type: Api
          Properties:
            Path: /register
            Method: post
      Tags:
        Project: !Ref ProjectName
  VerifyLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: VerifyLambda
      Handler: index.handler
      CodeUri: dist/verify
      MemorySize: 128 
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UserTable
      Environment:
        Variables:
          DbTableName: !Ref UserTable
      Events:
        MyEndpoint:
          Type: Api
          Properties:
            Path: /verify/{verifyID}
            Method: get
      Tags:
        Project: !Ref ProjectName
  VerifySendEmailLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: VerifySendEmailLambda
      Handler: index.handler
      CodeUri: dist/verifySendEmail
      MemorySize: 128 
      Policies:
        - SESCrudPolicy:
            IdentityName: !Ref SupportEmailDomain
      Environment:
        Variables:
          SupportEmailDomain: !Ref SupportEmailDomain
          SiteName: !Ref SiteName
      Tags:
        Project: !Ref ProjectName
  # HelloLambda:
  #   Type: AWS::Serverless::Function
  #   Properties:
  #     FunctionName: HelloLambda
  #     Handler: index.handler
  #     CodeUri: dist/hello
  #     MemorySize: 128 
  #     Events:
  #       MyEndpoint:
  #         Type: Api
  #         Properties:
  #           Path: /test
  #           Method: get