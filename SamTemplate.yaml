AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: AWS Simple Authorization
Parameters:
  ProjectName: 
    Type: String
    Description: Project Name
  SupportEmail: 
    Type: String
    Description: Support email that validation code is from
  # TODO: encrypt before sending
  SecretToken:
    Type: String
    NoEcho: true
    Description: The secret key used for signing jwt
Globals:
  Function:
    Runtime: nodejs8.10
    Timeout: 30
Resources:
  UserTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: !Sub '${ProjectName}-Users'
      PrimaryKey:
        Name: email
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
    Tags:
      Project: !Ref ProjectName
  LoginLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: LoginLambda
      Handler: index.handler
      CodeUri: dist/login
      MemorySize: 128 
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref UserTable
      Environment:
        Variables:
          JWT_SECRET: !Ref SecretToken
          DbTableName: !Ref UserTable
      Events:
        MyEndpoint:
          Type: Api
          Properties:
            Path: /login
            Method: post
      Tags:
        Project: !Ref ProjectName
  RefreshLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: RefreshLambda
      Handler: index.handler
      CodeUri: dist/refresh
      MemorySize: 128 
      Environment:
        Variables:
          JWT_SECRET: !Ref SecretToken
      Events:
        MyEndpoint:
          Type: Api
          Properties:
            Path: /refresh
            Method: post
      Tags:
        Project: !Ref ProjectName
  RegisterLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: RegisterLambda
      Handler: index.handler
      CodeUri: dist/register
      MemorySize: 128 
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UserTable
        - LambdaInvokePolicy:
            FunctionName: !Ref ValidateSendEmailLambda
      Environment:
        Variables:
          DbTableName: !Ref UserTable
          ValidateSendEmailLambda: !Ref ValidateSendEmailLambda
      Events:
        MyEndpoint:
          Type: Api
          Properties:
            Path: /register
            Method: post
      Tags:
        Project: !Ref ProjectName
  ValidateSendEmailLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: ValidateSendEmailLambda
      Handler: index.handler
      CodeUri: dist/validateSendEmail
      MemorySize: 128 
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref UserTable
        - SESCrudPolicy:
            IdentityName: !Ref SupportEmail
      Environment:
        Variables:
          FromSupportEmail: !Ref SupportEmail
      Tags:
        Project: !Ref ProjectName
  # HelloLambda:
  #   Type: AWS::Serverless::Function
  #   Properties:
  #     FunctionName: HelloLambda
  #     Handler: index.handler
  #     CodeUri: dist/hello
  #     MemorySize: 128 
  #     Events:
  #       MyEndpoint:
  #         Type: Api
  #         Properties:
  #           Path: /test
  #           Method: get